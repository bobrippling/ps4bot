#!/usr/bin/env python

from slackclient import SlackClient
import sys
import select
import config

def dump_channels():
    for i in conn.server.channels:
        print "name={} id={}".format(i.name, i.id)
        #print conn.api_call("groups.info", channel = i.id)

def dump_users():
    users = conn.server.users
    for u in users:
        if type(u) == unicode or type(u) == str:
            u = users[u]
        print "id={} name={} real_name={}".format(u.id, u.name, u.real_name)

def chat():
    def ENCODE(s):
        return s.encode('utf-8')

    def find_channel(id):
        for i in conn.server.channels:
            if i.id == id:
                return i
        return None

    def find_user(id):
        for i in conn.server.users:
            if i.id == id:
                return i.name
        return None

    def handle_stdin():
        try:
            line = raw_input()
        except EOFError:
            sys.exit(0)

        conn.api_call(
                "chat.postMessage",
                channel = channel,
                text = line,
                username = botname,
                icon_emoji = ":{}:".format(botemoji),
                as_user = False)

    def handle_slack():
        for slack_message in conn.rtm_read():
            print slack_message

    print "connected"
    while True:
        ready = select.select([sys.stdin, conn.server.websocket], [], [])
        ready_in = ready[0]

        if sys.stdin in ready_in:
            handle_stdin()
        if conn.server.websocket in ready_in:
            handle_slack()

def interactive():
	import code
	print "globals available: `conn`"
	code.interact(local = globals())
	#code.InteractiveConsole(locals=globals()).interact()

def usage():
    print >>sys.stderr, "Usage: {} chat channel botname botemoji".format(sys.argv[0])
    print >>sys.stderr, "       {} dump-channels".format(sys.argv[0])
    print >>sys.stderr, "       {} dump-users".format(sys.argv[0])
    print >>sys.stderr, "       {} interactive".format(sys.argv[0])
    sys.exit(2)

if len(sys.argv) < 2:
    usage()
if sys.argv[1] == "chat":
    if len(sys.argv) != 5:
        usage()
    channel = sys.argv[2]
    botname = sys.argv[3]
    botemoji = sys.argv[4]
    main = chat
elif sys.argv[1] == "dump-channels":
    if len(sys.argv) != 2:
        usage()
    main = dump_channels
elif sys.argv[1] == "dump-users":
    if len(sys.argv) != 2:
        usage()
    main = dump_users
elif sys.argv[1] == "interactive":
    if len(sys.argv) != 2:
        usage()
    main = interactive
else:
    usage()

conn = SlackClient(config.slack_token)
if not conn.rtm_connect():
    print >>sys.stderr, "couldn't connect"
    sys.exit(1)

main()
